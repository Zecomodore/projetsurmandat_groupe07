# Définir la version minimale d'iOS
platform :ios, '12.0'

# Empêcher les statistiques de CocoaPods pour réduire la latence
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Définir les configurations de projet (Debug, Release, Profile)
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Fonction pour obtenir le chemin de Flutter
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

# Charger l'helper de Pod Flutter
require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# Configurer le Podfile Flutter
flutter_ios_podfile_setup

# Bloc Target pour le projet 'Runner'
target 'Runner' do
  # Utiliser des frameworks statiques et des headers modulaires
  use_frameworks! :linkage => :static
  use_modular_headers!

  # Installer tous les pods Flutter
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # Configuration pour les tests
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# Post-installation pour appliquer les configurations supplémentaires après l'installation des pods
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end
end
